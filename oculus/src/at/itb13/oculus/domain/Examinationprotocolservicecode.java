package at.itb13.oculus.domain;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Examinationprotocolservicecode generated by hbm2java
 */
@Entity
@Table(name = "examinationprotocolservicecode", catalog = "oculusdb")
public class Examinationprotocolservicecode implements java.io.Serializable {

	private ExaminationprotocolservicecodeId id;
	private Examinationprotocol examinationprotocol;
	private Insurancecarrier insurancecarrier;
	private Servicecode servicecode;

	public Examinationprotocolservicecode() {
	}

	public Examinationprotocolservicecode(ExaminationprotocolservicecodeId id,
			Examinationprotocol examinationprotocol,
			Insurancecarrier insurancecarrier, Servicecode servicecode) {
		this.id = id;
		this.examinationprotocol = examinationprotocol;
		this.insurancecarrier = insurancecarrier;
		this.servicecode = servicecode;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "examinationProtocolId", column = @Column(name = "examinationProtocolId", nullable = false)),
			@AttributeOverride(name = "serviceCodeId", column = @Column(name = "serviceCodeId", nullable = false)),
			@AttributeOverride(name = "insuranceCarrierKey", column = @Column(name = "insuranceCarrierKey", nullable = false, length = 4)) })
	public ExaminationprotocolservicecodeId getId() {
		return this.id;
	}

	public void setId(ExaminationprotocolservicecodeId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "examinationProtocolId", nullable = false, insertable = false, updatable = false)
	public Examinationprotocol getExaminationprotocol() {
		return this.examinationprotocol;
	}

	public void setExaminationprotocol(Examinationprotocol examinationprotocol) {
		this.examinationprotocol = examinationprotocol;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "insuranceCarrierKey", nullable = false, insertable = false, updatable = false)
	public Insurancecarrier getInsurancecarrier() {
		return this.insurancecarrier;
	}

	public void setInsurancecarrier(Insurancecarrier insurancecarrier) {
		this.insurancecarrier = insurancecarrier;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "serviceCodeId", nullable = false, insertable = false, updatable = false)
	public Servicecode getServicecode() {
		return this.servicecode;
	}

	public void setServicecode(Servicecode servicecode) {
		this.servicecode = servicecode;
	}

}
