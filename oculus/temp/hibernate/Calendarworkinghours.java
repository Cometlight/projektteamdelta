// default package
// Generated 01.04.2015 15:28:33 by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Calendarworkinghours generated by hbm2java
 */
@Entity
@Table(name = "calendarworkinghours", catalog = "oculusdb", uniqueConstraints = @UniqueConstraint(columnNames = {
		"morningFrom", "morningTo", "afternoonFrom", "afternoonTo" }))
public class Calendarworkinghours implements java.io.Serializable {

	private Integer calendarWorkingHoursId;
	private Date morningFrom;
	private Date morningTo;
	private Date afternoonFrom;
	private Date afternoonTo;
	private Set<Calendar> calendarsForCalendarWorkingHoursIdWednesday = new HashSet<Calendar>(
			0);
	private Set<Calendar> calendarsForCalendarWorkingHoursIdTuesday = new HashSet<Calendar>(
			0);
	private Set<Calendar> calendarsForCalendarWorkingHoursIdMonday = new HashSet<Calendar>(
			0);
	private Set<Calendar> calendarsForCalendarWorkingHoursIdSunday = new HashSet<Calendar>(
			0);
	private Set<Calendar> calendarsForCalendarWorkingHoursIdSaturday = new HashSet<Calendar>(
			0);
	private Set<Calendar> calendarsForCalendarWorkingHoursIdFriday = new HashSet<Calendar>(
			0);
	private Set<Calendar> calendarsForCalendarWorkingHoursIdThursday = new HashSet<Calendar>(
			0);

	public Calendarworkinghours() {
	}

	public Calendarworkinghours(Date morningFrom, Date morningTo,
			Date afternoonFrom, Date afternoonTo,
			Set<Calendar> calendarsForCalendarWorkingHoursIdWednesday,
			Set<Calendar> calendarsForCalendarWorkingHoursIdTuesday,
			Set<Calendar> calendarsForCalendarWorkingHoursIdMonday,
			Set<Calendar> calendarsForCalendarWorkingHoursIdSunday,
			Set<Calendar> calendarsForCalendarWorkingHoursIdSaturday,
			Set<Calendar> calendarsForCalendarWorkingHoursIdFriday,
			Set<Calendar> calendarsForCalendarWorkingHoursIdThursday) {
		this.morningFrom = morningFrom;
		this.morningTo = morningTo;
		this.afternoonFrom = afternoonFrom;
		this.afternoonTo = afternoonTo;
		this.calendarsForCalendarWorkingHoursIdWednesday = calendarsForCalendarWorkingHoursIdWednesday;
		this.calendarsForCalendarWorkingHoursIdTuesday = calendarsForCalendarWorkingHoursIdTuesday;
		this.calendarsForCalendarWorkingHoursIdMonday = calendarsForCalendarWorkingHoursIdMonday;
		this.calendarsForCalendarWorkingHoursIdSunday = calendarsForCalendarWorkingHoursIdSunday;
		this.calendarsForCalendarWorkingHoursIdSaturday = calendarsForCalendarWorkingHoursIdSaturday;
		this.calendarsForCalendarWorkingHoursIdFriday = calendarsForCalendarWorkingHoursIdFriday;
		this.calendarsForCalendarWorkingHoursIdThursday = calendarsForCalendarWorkingHoursIdThursday;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "calendarWorkingHoursId", unique = true, nullable = false)
	public Integer getCalendarWorkingHoursId() {
		return this.calendarWorkingHoursId;
	}

	public void setCalendarWorkingHoursId(Integer calendarWorkingHoursId) {
		this.calendarWorkingHoursId = calendarWorkingHoursId;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "morningFrom", length = 8)
	public Date getMorningFrom() {
		return this.morningFrom;
	}

	public void setMorningFrom(Date morningFrom) {
		this.morningFrom = morningFrom;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "morningTo", length = 8)
	public Date getMorningTo() {
		return this.morningTo;
	}

	public void setMorningTo(Date morningTo) {
		this.morningTo = morningTo;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "afternoonFrom", length = 8)
	public Date getAfternoonFrom() {
		return this.afternoonFrom;
	}

	public void setAfternoonFrom(Date afternoonFrom) {
		this.afternoonFrom = afternoonFrom;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "afternoonTo", length = 8)
	public Date getAfternoonTo() {
		return this.afternoonTo;
	}

	public void setAfternoonTo(Date afternoonTo) {
		this.afternoonTo = afternoonTo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "calendarworkinghoursByCalendarWorkingHoursIdWednesday")
	public Set<Calendar> getCalendarsForCalendarWorkingHoursIdWednesday() {
		return this.calendarsForCalendarWorkingHoursIdWednesday;
	}

	public void setCalendarsForCalendarWorkingHoursIdWednesday(
			Set<Calendar> calendarsForCalendarWorkingHoursIdWednesday) {
		this.calendarsForCalendarWorkingHoursIdWednesday = calendarsForCalendarWorkingHoursIdWednesday;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "calendarworkinghoursByCalendarWorkingHoursIdTuesday")
	public Set<Calendar> getCalendarsForCalendarWorkingHoursIdTuesday() {
		return this.calendarsForCalendarWorkingHoursIdTuesday;
	}

	public void setCalendarsForCalendarWorkingHoursIdTuesday(
			Set<Calendar> calendarsForCalendarWorkingHoursIdTuesday) {
		this.calendarsForCalendarWorkingHoursIdTuesday = calendarsForCalendarWorkingHoursIdTuesday;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "calendarworkinghoursByCalendarWorkingHoursIdMonday")
	public Set<Calendar> getCalendarsForCalendarWorkingHoursIdMonday() {
		return this.calendarsForCalendarWorkingHoursIdMonday;
	}

	public void setCalendarsForCalendarWorkingHoursIdMonday(
			Set<Calendar> calendarsForCalendarWorkingHoursIdMonday) {
		this.calendarsForCalendarWorkingHoursIdMonday = calendarsForCalendarWorkingHoursIdMonday;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "calendarworkinghoursByCalendarWorkingHoursIdSunday")
	public Set<Calendar> getCalendarsForCalendarWorkingHoursIdSunday() {
		return this.calendarsForCalendarWorkingHoursIdSunday;
	}

	public void setCalendarsForCalendarWorkingHoursIdSunday(
			Set<Calendar> calendarsForCalendarWorkingHoursIdSunday) {
		this.calendarsForCalendarWorkingHoursIdSunday = calendarsForCalendarWorkingHoursIdSunday;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "calendarworkinghoursByCalendarWorkingHoursIdSaturday")
	public Set<Calendar> getCalendarsForCalendarWorkingHoursIdSaturday() {
		return this.calendarsForCalendarWorkingHoursIdSaturday;
	}

	public void setCalendarsForCalendarWorkingHoursIdSaturday(
			Set<Calendar> calendarsForCalendarWorkingHoursIdSaturday) {
		this.calendarsForCalendarWorkingHoursIdSaturday = calendarsForCalendarWorkingHoursIdSaturday;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "calendarworkinghoursByCalendarWorkingHoursIdFriday")
	public Set<Calendar> getCalendarsForCalendarWorkingHoursIdFriday() {
		return this.calendarsForCalendarWorkingHoursIdFriday;
	}

	public void setCalendarsForCalendarWorkingHoursIdFriday(
			Set<Calendar> calendarsForCalendarWorkingHoursIdFriday) {
		this.calendarsForCalendarWorkingHoursIdFriday = calendarsForCalendarWorkingHoursIdFriday;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "calendarworkinghoursByCalendarWorkingHoursIdThursday")
	public Set<Calendar> getCalendarsForCalendarWorkingHoursIdThursday() {
		return this.calendarsForCalendarWorkingHoursIdThursday;
	}

	public void setCalendarsForCalendarWorkingHoursIdThursday(
			Set<Calendar> calendarsForCalendarWorkingHoursIdThursday) {
		this.calendarsForCalendarWorkingHoursIdThursday = calendarsForCalendarWorkingHoursIdThursday;
	}

}
