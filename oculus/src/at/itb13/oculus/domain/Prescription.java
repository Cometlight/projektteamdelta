package at.itb13.oculus.domain;
import java.time.LocalDateTime;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Convert;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import at.itb13.oculus.technicalServices.util.LocalDateTimePersistenceConverter;

/**
 * Prescription generated by hbm2java
 */
@Entity
@Table(name = "prescription", catalog = "oculusdb")
public class Prescription implements java.io.Serializable {

	private static final Logger _logger = LogManager.getLogger(Prescription.class
			.getName());
	private static final long serialVersionUID = 1L;
	private Integer prescriptionId;
	private Patient patient;
	private LocalDateTime issueDate;
	private Set<Medicine> medicines = new HashSet<Medicine>(0);

	public Prescription() {
	}

	public Prescription(Patient patient, LocalDateTime issueDate, Set<Medicine> medicines) {
		this.patient = patient;
		this.issueDate = issueDate;
		this.medicines = medicines;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "prescriptionId", unique = true, nullable = false)
	public Integer getPrescriptionId() {
		return this.prescriptionId;
	}

	public void setPrescriptionId(Integer prescriptionId) {
		this.prescriptionId = prescriptionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "patientId")
	public Patient getPatient() {
		return this.patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	@Convert(converter = LocalDateTimePersistenceConverter.class)
	@Column(name = "issueDate", length = 19)
	public LocalDateTime getIssueDate() {
		return this.issueDate;
	}

	public void setIssueDate(LocalDateTime issueDate) {
		this.issueDate = issueDate;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "prescriptionentry", catalog = "oculusdb", joinColumns = { @JoinColumn(name = "prescriptionId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "medicineId", nullable = false, updatable = false) })
	public Set<Medicine> getMedicines() {
		return this.medicines;
	}

	public void setMedicines(Set<Medicine> medicines) {
		this.medicines = medicines;
	}

}
