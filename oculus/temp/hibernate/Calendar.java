// default package
// Generated 01.04.2015 15:28:33 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Calendar generated by hbm2java
 */
@Entity
@Table(name = "calendar", catalog = "oculusdb")
public class Calendar implements java.io.Serializable {

	private Integer calendarId;
	private Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdWednesday;
	private Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdTuesday;
	private Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdMonday;
	private Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdSunday;
	private Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdSaturday;
	private Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdFriday;
	private Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdThursday;
	private Set<Doctor> doctors = new HashSet<Doctor>(0);
	private Set<Orthoptist> orthoptists = new HashSet<Orthoptist>(0);
	private Set<Calendarevent> calendarevents = new HashSet<Calendarevent>(0);

	public Calendar() {
	}

	public Calendar(
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdWednesday,
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdTuesday,
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdMonday,
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdSunday,
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdSaturday,
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdFriday,
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdThursday,
			Set<Doctor> doctors, Set<Orthoptist> orthoptists,
			Set<Calendarevent> calendarevents) {
		this.calendarworkinghoursByCalendarWorkingHoursIdWednesday = calendarworkinghoursByCalendarWorkingHoursIdWednesday;
		this.calendarworkinghoursByCalendarWorkingHoursIdTuesday = calendarworkinghoursByCalendarWorkingHoursIdTuesday;
		this.calendarworkinghoursByCalendarWorkingHoursIdMonday = calendarworkinghoursByCalendarWorkingHoursIdMonday;
		this.calendarworkinghoursByCalendarWorkingHoursIdSunday = calendarworkinghoursByCalendarWorkingHoursIdSunday;
		this.calendarworkinghoursByCalendarWorkingHoursIdSaturday = calendarworkinghoursByCalendarWorkingHoursIdSaturday;
		this.calendarworkinghoursByCalendarWorkingHoursIdFriday = calendarworkinghoursByCalendarWorkingHoursIdFriday;
		this.calendarworkinghoursByCalendarWorkingHoursIdThursday = calendarworkinghoursByCalendarWorkingHoursIdThursday;
		this.doctors = doctors;
		this.orthoptists = orthoptists;
		this.calendarevents = calendarevents;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "calendarId", unique = true, nullable = false)
	public Integer getCalendarId() {
		return this.calendarId;
	}

	public void setCalendarId(Integer calendarId) {
		this.calendarId = calendarId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "calendarWorkingHoursIdWednesday")
	public Calendarworkinghours getCalendarworkinghoursByCalendarWorkingHoursIdWednesday() {
		return this.calendarworkinghoursByCalendarWorkingHoursIdWednesday;
	}

	public void setCalendarworkinghoursByCalendarWorkingHoursIdWednesday(
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdWednesday) {
		this.calendarworkinghoursByCalendarWorkingHoursIdWednesday = calendarworkinghoursByCalendarWorkingHoursIdWednesday;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "calendarWorkingHoursIdTuesday")
	public Calendarworkinghours getCalendarworkinghoursByCalendarWorkingHoursIdTuesday() {
		return this.calendarworkinghoursByCalendarWorkingHoursIdTuesday;
	}

	public void setCalendarworkinghoursByCalendarWorkingHoursIdTuesday(
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdTuesday) {
		this.calendarworkinghoursByCalendarWorkingHoursIdTuesday = calendarworkinghoursByCalendarWorkingHoursIdTuesday;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "calendarWorkingHoursIdMonday")
	public Calendarworkinghours getCalendarworkinghoursByCalendarWorkingHoursIdMonday() {
		return this.calendarworkinghoursByCalendarWorkingHoursIdMonday;
	}

	public void setCalendarworkinghoursByCalendarWorkingHoursIdMonday(
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdMonday) {
		this.calendarworkinghoursByCalendarWorkingHoursIdMonday = calendarworkinghoursByCalendarWorkingHoursIdMonday;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "calendarWorkingHoursIdSunday")
	public Calendarworkinghours getCalendarworkinghoursByCalendarWorkingHoursIdSunday() {
		return this.calendarworkinghoursByCalendarWorkingHoursIdSunday;
	}

	public void setCalendarworkinghoursByCalendarWorkingHoursIdSunday(
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdSunday) {
		this.calendarworkinghoursByCalendarWorkingHoursIdSunday = calendarworkinghoursByCalendarWorkingHoursIdSunday;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "calendarWorkingHoursIdSaturday")
	public Calendarworkinghours getCalendarworkinghoursByCalendarWorkingHoursIdSaturday() {
		return this.calendarworkinghoursByCalendarWorkingHoursIdSaturday;
	}

	public void setCalendarworkinghoursByCalendarWorkingHoursIdSaturday(
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdSaturday) {
		this.calendarworkinghoursByCalendarWorkingHoursIdSaturday = calendarworkinghoursByCalendarWorkingHoursIdSaturday;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "calendarWorkingHoursIdFriday")
	public Calendarworkinghours getCalendarworkinghoursByCalendarWorkingHoursIdFriday() {
		return this.calendarworkinghoursByCalendarWorkingHoursIdFriday;
	}

	public void setCalendarworkinghoursByCalendarWorkingHoursIdFriday(
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdFriday) {
		this.calendarworkinghoursByCalendarWorkingHoursIdFriday = calendarworkinghoursByCalendarWorkingHoursIdFriday;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "calendarWorkingHoursIdThursday")
	public Calendarworkinghours getCalendarworkinghoursByCalendarWorkingHoursIdThursday() {
		return this.calendarworkinghoursByCalendarWorkingHoursIdThursday;
	}

	public void setCalendarworkinghoursByCalendarWorkingHoursIdThursday(
			Calendarworkinghours calendarworkinghoursByCalendarWorkingHoursIdThursday) {
		this.calendarworkinghoursByCalendarWorkingHoursIdThursday = calendarworkinghoursByCalendarWorkingHoursIdThursday;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "calendar")
	public Set<Doctor> getDoctors() {
		return this.doctors;
	}

	public void setDoctors(Set<Doctor> doctors) {
		this.doctors = doctors;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "calendar")
	public Set<Orthoptist> getOrthoptists() {
		return this.orthoptists;
	}

	public void setOrthoptists(Set<Orthoptist> orthoptists) {
		this.orthoptists = orthoptists;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "calendar")
	public Set<Calendarevent> getCalendarevents() {
		return this.calendarevents;
	}

	public void setCalendarevents(Set<Calendarevent> calendarevents) {
		this.calendarevents = calendarevents;
	}

}
